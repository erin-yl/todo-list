{"version":3,"file":"main.95e301c15cffb5389cba.js","mappings":"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","sources":["webpack://todo-list/./src/todo.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/storage.js","webpack://todo-list/./src/appLogic.js","webpack://todo-list/./src/domController.js","webpack://todo-list/./src/index.js"],"sourcesContent":["// Todo item module that manages todo objects\n\nclass Todo {\n  constructor(\n    title,\n    description,\n    dueDate,\n    priority,\n    tags = [],\n    completed = false,\n  ) {\n    this.id = `todo-${Date.now()}-${Math.random().toString(36).slice(2, 11)}`; // Unique ID\n    this.title = title;\n    this.description = description;\n\n    // Standardize dueDate to be a Date object or null\n    this.dueDate = null;\n    if (dueDate instanceof Date && !isNaN(dueDate.valueOf())) {\n      // For sample data using Date objects\n      this.dueDate = dueDate;\n    } else if (typeof dueDate === 'string' && dueDate.trim() !== '') {\n      // For HTML form inputs\n      const parsedDate = new Date(dueDate.trim());\n      this.dueDate = !isNaN(parsedDate.valueOf()) ? parsedDate : null;\n    } else {\n      this.dueDate = null;\n    }\n\n    this.priority = priority;\n    this.tags = Array.isArray(tags) ? tags : [];\n    this.completed = completed;\n  }\n\n  toggleComplete() {\n    this.completed = !this.completed;\n  }\n\n  updateDetails(details) {\n    if (details.title !== undefined) this.title = details.title;\n    if (details.description !== undefined) this.description = details.description;\n\n    if (details.dueDate !== undefined) {\n      if (details.dueDate instanceof Date && !isNaN(details.dueDate.valueOf())) {\n        this.dueDate = details.dueDate;\n      } else if (typeof details.dueDate === 'string' && details.dueDate.trim() !== '') {\n        const parsedDate = new Date(details.dueDate.trim());\n        this.dueDate = !isNaN(parsedDate.valueOf()) ? parsedDate : null;\n      } else {\n        this.dueDate = null;\n      }\n    }\n\n    if (details.priority) {\n      if (['low', 'medium', 'high'].includes(details.priority)) {\n        this.priority = details.priority;\n      }\n    }\n\n    if (details.tags && Array.isArray(details.tags)) {\n      this.tags = details.tags\n        .map((tag) => tag.trim())\n        .filter((tag) => tag.length > 0);\n    } else if (details.tagsString !== undefined) {\n      this.setTagsFromString(details.tagsString);\n    }\n  }\n\n  addTag(tag) {\n    const trimmedTag = tag.trim();\n    if (trimmedTag && !this.tags.includes(trimmedTag)) {\n      this.tags.push(trimmedTag);\n    }\n  }\n\n  removeTag(tagToRemove) {\n    const trimmedTagToRemove = tagToRemove.trim();\n    this.tags = this.tags.filter((tag) => tag !== trimmedTagToRemove);\n  }\n\n  // Helper to get a string representation of tags\n  getTagsString() {\n    return this.tags.join(', ');\n  }\n\n  // Helper to set tags from a comma-separated string\n  setTagsFromString(tagsString) {\n    if (typeof tagsString === 'string') {\n      this.tags = tagsString\n        .split(',')\n        .map((tag) => tag.trim())\n        .filter((tag) => tag.length > 0);\n    }\n  }\n}\n\nexport default Todo;","// Project module that manages a collection of todo items\n\nimport Todo from './todo.js';\n\nclass Project {\n  constructor(name) {\n    this.id = `project-${Date.now()}-${Math.random().toString(36).slice(2, 11)}`; // Unique ID\n    this.name = name;\n    this.todos = [];\n  }\n\n  addTodo(todoItem) {\n    if (!(todoItem instanceof Todo)) return false;\n    if (this.todos.some((todo) => todo.id === todoItem.id)) return false;\n\n    this.todos.push(todoItem);\n    return true;\n  }\n\n  removeTodo(todoId) {\n    this.todos = this.todos.filter((todo) => todo.id !== todoId);\n  }\n\n  getTodoById(todoId) {\n    return this.todos.find((todo) => todo.id === todoId);\n  }\n\n  getAllTodos() {\n    return [...this.todos]; // Return a copy to prevent direct modification\n  }\n\n  getTodosByPriority(priorityLevel) {\n    return this.todos.filter((todo) => todo.priority === priorityLevel);\n  }\n\n  getTodosByCompletion(completionStatus) {\n    return this.todos.filter((todo) => todo.completed === completionStatus);\n  }\n\n  getTodosByTag(tag) {\n    const trimmedTag = tag.trim().toLowerCase();\n    if (!trimmedTag) return this.getAllTodos(); // Return all todos if tag is empty\n\n    return this.todos.filter((todo) =>\n      todo.tags.some((t) => t.toLowerCase() === trimmedTag),\n    );\n  }\n\n  getUniqueTags() {\n    const allTags = new Set();\n    this.todos.forEach((todo) => {\n      todo.tags.forEach((tag) => allTags.add(tag.trim()));\n    });\n    return Array.from(allTags).sort();\n  }\n}\n\nexport default Project;","// Storage module that uses localStorage mechanism\n\nconst STORAGE_KEY = 'todoAppProjects';\n\nconst storage = {\n  saveData: function (data) {\n    // Save project objects\n    try {\n      const serializedData = JSON.stringify(data);\n      localStorage.setItem(STORAGE_KEY, serializedData);\n    } catch (error) {\n      console.error('Error saving data to localStorage:', error);\n    }\n  },\n\n  loadData: function () {\n    try {\n      const serializedData = localStorage.getItem(STORAGE_KEY);\n      if (serializedData === null) {\n        return undefined;\n      }\n      return JSON.parse(serializedData);\n    } catch (error) {\n      console.error('Error loading data from localStorage:', error);\n      return undefined;\n    }\n  },\n\n  clearData: function () {\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n    } catch (error) {\n      console.error('Error clearing data from localStorage:', error);\n    }\n  },\n};\n\nexport default storage;\n","// App controller module that handles the core logic\n\nimport Project from './project.js';\nimport Todo from './todo.js';\nimport storage from './storage.js';\nimport { parse, isEqual, startOfDay } from 'date-fns';\n\nconst appLogic = (() => {\n  let projects = [];\n  let currentProject = null;\n\n  function rehydrateProjects(plainProjects) {\n    return plainProjects.map((plainProject) => {\n      const project = new Project(plainProject.name);\n      project.id = plainProject.id;\n      project.todos = plainProject.todos.map((plainTodo) => {\n        const todo = new Todo(\n          plainTodo.title,\n          plainTodo.description,\n          plainTodo.dueDate,\n          plainTodo.priority,\n          plainTodo.tags || [],\n          plainTodo.completed,\n        );\n        todo.id = plainTodo.id;\n        return todo;\n      });\n      return project;\n    });\n  }\n\n  function createSampleData() {\n    const workProject = new Project('Work');\n    workProject.addTodo(new Todo('Finish Q2 report', 'Compile required data and finalize the conclusion.', new Date(2025, 4, 26), 'high', ['report'], false));\n    workProject.addTodo(new Todo('Team meeting prep', `Prepare agenda and slides for Monday's team meeting.`, new Date(2025, 5, 6), 'medium', ['meeting'], false));\n    workProject.addTodo(new Todo('Client follow-up', 'Call John Doe regarding project Alpha.', '', 'medium', ['client'], true));\n\n    const personalProject = new Project('Personal');\n    personalProject.addTodo(new Todo('Grocery shopping', 'Milk, eggs, chicken, fruits.', new Date(2025, 4, 20), 'low', ['home', 'shopping'], false));\n    personalProject.addTodo(new Todo('Book doctor appointment', 'Annual check-up.', new Date(2025, 5, 10), 'high', ['health'], false));\n\n    const learningProject = new Project('Learning');\n    learningProject.addTodo(new Todo('Webpack Deep Dive', 'Understand loaders and plugins.', new Date(2025, 4, 30), 'medium', ['dev'], true));\n    learningProject.addTodo(new Todo('Read \"The Pragmatic Programmer\"', 'Chapter 3-5', '', 'low', ['reading', 'dev'], false));\n\n    projects = [workProject, personalProject, learningProject];\n    currentProject = workProject;\n    saveProjects();\n  }\n\n  function loadProjects() {\n    const loadedData = storage.loadData();\n    if (loadedData && loadedData.length > 0) {\n      projects = rehydrateProjects(loadedData);\n      currentProject = projects[0] || null;\n    } else {\n      createSampleData();\n    }\n  }\n\n  function saveProjects() {\n    storage.saveData(projects);\n  }\n\n  // Project management\n  function addProject(name) {\n    if (\n      name &&\n      !projects.find((p) => p.name.toLowerCase() === name.toLowerCase())\n    ) {\n      const newProject = new Project(name);\n      projects.push(newProject);\n      saveProjects();\n      return newProject;\n    }\n    return null;\n  }\n\n  function updateProject(projectId, newName) {\n    const projectToUpdate = getProjectById(projectId);\n    if (!projectToUpdate) {\n      return null;\n    }\n    if (projects.some(p => p.id !== projectId && p.name.toLowerCase() === newName.toLowerCase())) {\n      return { error: 'duplicate', project: projectToUpdate };\n    }\n    projectToUpdate.name = newName;\n    saveProjects();\n    return projectToUpdate;\n  }\n\n  function removeProject(projectId) {\n    const projectIndex = projects.findIndex(p => p.id === projectId);\n    if (projectIndex > -1) {\n      if (projects.length === 1) {\n        return { error: 'last_project' };\n      }\n      const removedProject = projects.splice(projectIndex, 1)[0];\n      if (currentProject && currentProject.id === projectId) {\n        currentProject = projects.length > 0 ? projects[0] : null;\n      }\n      saveProjects();\n      return { success: true, removedProjectName: removedProject.name, newCurrentProject: currentProject };\n    }\n    return { error: 'not_found' };\n  }\n\n  function getProjectById(projectId) {\n    return projects.find((p) => p.id === projectId);\n  }\n\n  function getAllProjects() {\n    return [...projects];\n  }\n\n  function getCurrentProject() {\n    return currentProject;\n  }\n\n  function setCurrentProject(projectId) {\n    const project = getProjectById(projectId);\n    if (project) {\n      currentProject = project;\n      return true;\n    }\n    return false;\n  }\n\n  // To-do management\n  function addTodoToProject(projectId, todoDetails) {\n    const project = getProjectById(projectId);\n    if (project) {\n      const { title, description, dueDate, priority, tagsString } = todoDetails;\n      const newTodo = new Todo(title, description, dueDate, priority);\n      if (tagsString) {\n        newTodo.setTagsFromString(tagsString);\n      }\n      project.addTodo(newTodo);\n      saveProjects();\n      return newTodo;\n    }\n    return null;\n  }\n\n  function removeTodoFromProject(projectId, todoId) {\n    const project = getProjectById(projectId);\n    if (project) {\n      project.removeTodo(todoId);\n      saveProjects();\n      return true;\n    }\n    return false;\n  }\n\n  function updateTodoInProject(projectId, todoId, updatedDetails) {\n    const project = getProjectById(projectId);\n    if (project) {\n      const todo = project.getTodoById(todoId);\n      if (todo) {\n        if (updatedDetails.tagsString !== undefined) {\n          todo.setTagsFromString(updatedDetails.tagsString);\n          // Avoid passing tagsString since todo.updateDetails expects tags as an array\n          // eslint-disable-next-line no-unused-vars\n          const { tagsString, ...otherDetails } = updatedDetails;\n          todo.updateDetails(otherDetails);\n        } else {\n          todo.updateDetails(updatedDetails);\n        }\n        saveProjects();\n        return todo;\n      }\n    }\n    return null;\n  }\n\n  function toggleTodoComplete(projectId, todoId) {\n    const project = getProjectById(projectId);\n    if (project) {\n      const todo = project.getTodoById(todoId);\n      if (todo) {\n        todo.toggleComplete();\n        saveProjects();\n        return todo;\n      }\n    }\n    return null;\n  }\n\n  function getTodosAcrossProjects() {\n    return projects.reduce(\n      (acc, project) => acc.concat(project.getAllTodos()),\n      [],\n    );\n  }\n\n  function getTodosWithProjectInfo() {\n    const allTodosWithProjectInfo = [];\n    projects.forEach(project => {\n      project.getAllTodos().forEach(todo => {\n        allTodosWithProjectInfo.push({\n          ...todo,\n          originalProjectId: project.id,\n          projectName: project.name\n        });\n      });\n    });\n    return allTodosWithProjectInfo;\n  }\n\n  function getTodosDueOnDate(targetDateString) {\n    if (!targetDateString) return [];\n\n    const targetDate = startOfDay(parse(targetDateString, 'yyyy-MM-dd', new Date()));\n    if (isNaN(targetDate.valueOf())) return [];\n\n    const dueTodosWithProjectInfo = [];\n    projects.forEach(project => {\n        project.getAllTodos().forEach(todo => {\n            if (todo.dueDate) { // todo.dueDate is a Date object or null\n                if (isEqual(startOfDay(todo.dueDate), targetDate)) {\n                    dueTodosWithProjectInfo.push({\n                        ...todo,\n                        originalProjectId: project.id,\n                        projectName: project.name\n                    });\n                }\n            }\n        });\n    });\n    return dueTodosWithProjectInfo;\n}\n\n  function searchTodosInList(todos, searchTerm) {\n    if (!searchTerm || searchTerm.trim() === '') {\n      return todos;\n    }\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return todos.filter(todo =>\n      todo.title.toLowerCase().includes(lowerSearchTerm) ||\n      todo.description.toLowerCase().includes(lowerSearchTerm)\n    );\n  }\n\n  function getTagsAcrossProjects() {\n    const allTags = new Set();\n    projects.forEach((project) => {\n      project.getUniqueTags().forEach((tag) => allTags.add(tag));\n    });\n    return Array.from(allTags).sort();\n  }\n\n  function filterTodosByTagAcrossProjects(tag) {\n    const allTodos = getTodosAcrossProjects();\n    const trimmedTag = tag.trim().toLowerCase();\n    if (!trimmedTag) return allTodos;\n    return allTodos.filter((todo) =>\n      todo.tags.some((t) => t.toLowerCase() === trimmedTag),\n    );\n  }\n\n  function filterTodosByPriorityAcrossProjects(priorityLevel) {\n    const allTodos = getTodosAcrossProjects();\n    return allTodos.filter((todo) => todo.priority === priorityLevel);\n  }\n\n  const priorityOrder = { 'high': 1, 'medium': 2, 'low': 3 };\n\n  function sortTodos(todos, sortField, sortDirection = 'asc') {\n    const sorted = [...todos];\n\n    sorted.sort((a, b) => {\n      let valA, valB;\n\n      switch (sortField) {\n        case 'dueDate':\n          // For null due dates, sort them to the end\n          if (a.dueDate === null && b.dueDate === null) return 0;\n          if (a.dueDate === null) return 1; // a comes after b\n          if (b.dueDate === null) return -1; // a comes before b\n          valA = a.dueDate;\n          valB = b.dueDate;\n          break;\n        case 'priority':\n          valA = priorityOrder[a.priority];\n          valB = priorityOrder[b.priority];\n          break;\n        default:\n          return 0; // No sorting for unknown fields\n      }\n\n      let comparison = 0;\n      if (valA > valB) {\n        comparison = 1;\n      } else if (valA < valB) {\n        comparison = -1;\n      }\n      return sortDirection === 'desc' ? comparison * -1 : comparison;\n    });\n    return sorted;\n  }\n\n  loadProjects();\n\n  return {\n    addProject,\n    updateProject,\n    removeProject,\n    getProjectById,\n    getAllProjects,\n    setCurrentProject,\n    getCurrentProject,\n    addTodoToProject,\n    removeTodoFromProject,\n    updateTodoInProject,\n    toggleTodoComplete,\n    getTodosAcrossProjects,\n    getTodosWithProjectInfo,\n    getTodosDueOnDate,\n    searchTodosInList,\n    getTagsAcrossProjects,\n    filterTodosByTagAcrossProjects,\n    filterTodosByPriorityAcrossProjects,\n    sortTodos,\n  };\n})();\n\nexport default appLogic;","// Display controller module that handles DOM manipulations\n\nimport { format, isValid as isValidDate } from 'date-fns';\n\nconst domController = (() => {\n  // DOM element selectors\n  const projectsListUL = document.getElementById('projects-list');\n  const addProjectBtn = document.getElementById('add-project-btn');\n  const currentProjectTitle = document.getElementById('current-project-title');\n  const addTodoBtn = document.getElementById('add-todo-btn');\n  const todosListUL = document.getElementById('todos-list');\n  const tagFilterArea = document.getElementById('tag-filter-area');\n  const clearTagFilterBtn = document.getElementById('clear-tag-filter-btn');\n  const notificationArea = document.getElementById('notification-area');\n\n  // Project modal\n  const projectModal = document.getElementById('project-modal');\n  const projectForm = document.getElementById('project-form');\n  const projectIdInput = document.getElementById('project-id'); // Hidden input for project editing\n  const projectNameInput = document.getElementById('project-name-input');\n  const saveProjectBtn = document.getElementById('save-project-btn');\n  const closeProjectModalBtn = document.getElementById('close-project-modal');\n\n  // Todo modal\n  const todoModal = document.getElementById('todo-modal');\n  const todoForm = document.getElementById('todo-form');\n  const todoIdInput = document.getElementById('todo-id'); // Hidden input for todo editing\n  const todoTitleInput = document.getElementById('todo-title-input');\n  const todoDescriptionInput = document.getElementById('todo-description-input',\n  );\n  const todoDueDateInput = document.getElementById('todo-dueDate-input');\n  const todoPriorityInput = document.getElementById('todo-priority-input');\n  const todoTagsInput = document.getElementById('todo-tags-input');\n  const closeTodoModalBtn = document.getElementById('close-todo-modal');\n\n  // Helper functions to remove all child nodes\n  function clearElement(element) {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n\n  function formatDateForDisplay(date) {\n    if (date instanceof Date && isValidDate(date)) { //\n      return format(date, 'MMM dd, yyyy'); //\n    }\n    return 'No date set';\n  }\n\n  // Project rendering\n  function renderProjects(projects, currentProjectId) {\n    clearElement(projectsListUL);\n    if (!projects || projects.length === 0) {\n      const span = document.createElement('span');\n      span.textContent = 'No projects yet.';\n      projectsListUL.appendChild(span);\n      return;\n    }\n\n    projects.forEach((project) => {\n      const li = document.createElement('li');\n      li.dataset.projectId = project.id;\n\n      const nameSpan = document.createElement('span');\n      nameSpan.classList.add('project-name');\n      nameSpan.textContent = project.name;\n      li.appendChild(nameSpan);\n\n      const actionsDiv = document.createElement('div');\n      actionsDiv.classList.add('project-actions');\n\n      const moreBtn = document.createElement('button');\n      moreBtn.classList.add('more-actions-btn');\n      moreBtn.innerHTML = '&#x22EE;'; // Vertical ellipsis\n      moreBtn.title = 'More options';\n      moreBtn.dataset.projectId = project.id;\n      actionsDiv.appendChild(moreBtn);\n\n      const dropdown = document.createElement('ul');\n      dropdown.classList.add('actions-dropdown');\n      // Edit option\n      const editLi = document.createElement('li');\n      editLi.textContent = 'Edit';\n      editLi.classList.add('edit-project');\n      editLi.dataset.projectId = project.id;\n      dropdown.appendChild(editLi);\n      // Delete option\n      const deleteLi = document.createElement('li');\n      deleteLi.textContent = 'Delete';\n      deleteLi.classList.add('delete-project');\n      deleteLi.dataset.projectId = project.id;\n      dropdown.appendChild(deleteLi);\n\n      actionsDiv.appendChild(dropdown);\n      li.appendChild(actionsDiv);\n\n      if (project.id === currentProjectId) {\n        li.classList.add(\"active\");\n      }\n      projectsListUL.appendChild(li);\n    });\n  }\n\n  function updateProjectTitle(title) {\n    currentProjectTitle.textContent = title || 'No project selected';\n  }\n\n  // To-do rendering\n  function renderTodos(projectOrSearchResults) {\n    clearElement(todosListUL);\n\n    const isGlobalSearch = projectOrSearchResults && projectOrSearchResults.isGlobalSearch === true;\n    const todos = projectOrSearchResults ? projectOrSearchResults.todos : [];\n    const displayName = projectOrSearchResults ? projectOrSearchResults.name : 'Select a Project';\n\n    updateProjectTitle(displayName);\n\n    if (!todos || todos.length === 0) {\n      const span = document.createElement('span');\n      if (isGlobalSearch) {\n        span.textContent = 'No tasks found matching your search.';\n      } else if (projectOrSearchResults) {\n        span.textContent = 'No tasks in this project yet.';\n      } else {\n        span.textContent = 'Select a project or enter a search term.';\n      }\n      todosListUL.appendChild(span);\n\n      return;\n    }\n\n    todos.forEach(todo => {\n      const li = document.createElement('li');\n      li.dataset.todoId = todo.id;\n\n      if (isGlobalSearch && todo.originalProjectId) {\n        li.dataset.originalProjectId = todo.originalProjectId;\n      }\n      li.classList.add(`priority-${todo.priority}`);\n      if (todo.completed) {\n        li.classList.add('todo-completed');\n      }\n\n      const todoPreviewContent = document.createElement('div');\n      todoPreviewContent.classList.add('todo-preview-content');\n\n      const checkbox = document.createElement('input');\n      checkbox.type = 'checkbox';\n      checkbox.checked = todo.completed;\n      checkbox.classList.add('todo-checkbox');\n      checkbox.dataset.todoId = todo.id;\n\n      const todoInfoDiv = document.createElement('div');\n      todoInfoDiv.classList.add('todo-info');\n\n      const titleSpan = document.createElement('span');\n      titleSpan.classList.add('todo-title');\n      titleSpan.textContent = todo.title;\n\n      const dueDateSpan = document.createElement('span');\n      dueDateSpan.classList.add('todo-due-date');\n      dueDateSpan.textContent = `Due: ${formatDateForDisplay(todo.dueDate)}`;\n\n      todoInfoDiv.appendChild(checkbox);\n      todoInfoDiv.appendChild(titleSpan);\n      todoInfoDiv.appendChild(dueDateSpan);\n\n      // Project name display in global search result\n      if (isGlobalSearch && todo.projectName) {\n        const projectLabelSpan = document.createElement('span');\n        projectLabelSpan.classList.add('todo-project-label');\n        projectLabelSpan.textContent = `(Project: ${todo.projectName})`;\n        todoInfoDiv.appendChild(projectLabelSpan);\n      }\n\n      // Tags display\n      if (todo.tags && todo.tags.length > 0) {\n        const tagsDiv = document.createElement('div');\n        tagsDiv.classList.add('todo-tags-display');\n        todo.tags.forEach((tag) => {\n          const tagSpan = document.createElement('span');\n          tagSpan.classList.add('tag-label');\n          tagSpan.textContent = tag;\n          tagsDiv.appendChild(tagSpan);\n        });\n        todoInfoDiv.appendChild(tagsDiv);\n      }\n\n      const actionsDiv = document.createElement('div');\n      actionsDiv.classList.add('todo-actions');\n\n      const expandBtn = document.createElement('button');\n      expandBtn.classList.add('expand-todo-btn');\n      expandBtn.innerHTML = '&#43;'; // Plus sign (show)\n      expandBtn.title = 'Show details';\n      expandBtn.dataset.todoId = todo.id;\n      actionsDiv.appendChild(expandBtn);\n\n      const moreBtn = document.createElement('button');\n      moreBtn.classList.add('more-actions-btn');\n      moreBtn.innerHTML = '&#x22EE;'; // Vertical ellipsis\n      moreBtn.title = \"More options\";\n      moreBtn.dataset.todoId = todo.id;\n      actionsDiv.appendChild(moreBtn);\n\n      const dropdown = document.createElement('ul');\n      dropdown.classList.add('actions-dropdown');\n      // Edit option\n      const editLi = document.createElement('li');\n      editLi.textContent = 'Edit';\n      editLi.classList.add('edit-todo');\n      editLi.dataset.todoId = todo.id;\n      dropdown.appendChild(editLi);\n      // Delete option\n      const deleteLi = document.createElement('li');\n      deleteLi.textContent = 'Delete';\n      deleteLi.classList.add('delete-todo');\n      deleteLi.dataset.todoId = todo.id;\n      dropdown.appendChild(deleteLi);\n\n      actionsDiv.appendChild(dropdown);\n\n      todoPreviewContent.appendChild(todoInfoDiv);\n      todoPreviewContent.appendChild(actionsDiv);\n      li.appendChild(todoPreviewContent);\n\n      const fullDetailsDiv = document.createElement('div');\n      fullDetailsDiv.classList.add('todo-full-details', 'hidden');\n\n      const descriptionP = document.createElement('p');\n      descriptionP.innerHTML = 'Description: ';\n      const descriptionText = document.createTextNode(todo.description || 'No description');\n      descriptionP.appendChild(descriptionText);\n\n      const priorityP = document.createElement('p');\n      const priorityText = todo.priority.charAt(0).toUpperCase() + todo.priority.slice(1);\n      priorityP.innerHTML = `Priority: <span class=\"priority-text-${todo.priority}\">${priorityText}</span>`;\n\n      fullDetailsDiv.appendChild(descriptionP);\n      fullDetailsDiv.appendChild(priorityP);\n      li.appendChild(fullDetailsDiv);\n      todosListUL.appendChild(li);\n    });\n  }\n\n  // Modal handling\n  function openProjectModal(projectToEdit = null) {\n    clearFormErrors(projectForm);\n    projectForm.reset();\n    projectIdInput.value = ''; // Clear hidden ID field\n    saveProjectBtn.textContent = 'Save';\n\n    if (projectToEdit) {\n      projectIdInput.value = projectToEdit.id;\n      projectNameInput.value = projectToEdit.name;\n    }\n    projectModal.style.display = 'block';\n    projectNameInput.focus();\n  }\n\n  function closeProjectModal() {\n    projectModal.style.display = 'none';\n  }\n\n  function openTodoModal(todoToEdit = null, currentProjectId) {\n    clearFormErrors(todoForm);\n    todoForm.reset();\n    todoIdInput.value = ''; // Clear hidden ID field\n\n    if (todoToEdit) {\n      todoIdInput.value = todoToEdit.id;\n      todoTitleInput.value = todoToEdit.title;\n      todoDescriptionInput.value = todoToEdit.description;\n      todoDueDateInput.value = (todoToEdit.dueDate && isValidDate(todoToEdit.dueDate))\n        ? format(todoToEdit.dueDate, 'yyyy-MM-dd') // Format Date obj for input\n        : ''; // Empty string for null or invalid date\n      todoPriorityInput.value = todoToEdit.priority;\n      todoTagsInput.value = todoToEdit.tags ? todoToEdit.getTagsString() : '';\n    }\n    todoForm.dataset.currentProjectId = currentProjectId;\n    todoModal.style.display = 'block';\n    todoTitleInput.focus();\n  }\n\n  function closeTodoModal() {\n    todoModal.style.display = 'none';\n  }\n\n  // Form data getters\n  function getProjectFormData() {\n    clearFormErrors(projectForm);\n    let isValid = true;\n    const name = projectNameInput.value.trim();\n    const id = projectIdInput.value;\n\n    if (projectNameInput.validity.valueMissing) {\n      showFieldError(projectNameInput, 'Project name is required.');\n      isValid = false;\n    }\n    return isValid ? { id, name } : null;\n  }\n\n  function getTodoFormData() {\n    clearFormErrors(todoForm);\n    let isValid = true;\n    const title = todoTitleInput.value.trim();\n    const description = todoDescriptionInput.value.trim();\n    const dueDate = todoDueDateInput.value;\n    const priority = todoPriorityInput.value;\n    const tagsString = todoTagsInput.value.trim(); // Comma-separated string\n    const id = todoIdInput.value;\n    const currentProjectId = todoForm.dataset.currentProjectId;\n\n    if (todoTitleInput.validity.valueMissing) {\n      showFieldError(todoTitleInput, 'Task name is required.');\n      isValid = false;\n    }\n\n    return isValid\n      ? {\n        id,\n        title,\n        description,\n        dueDate,\n        priority,\n        tagsString,\n        currentProjectId\n      }\n      : null;\n  }\n\n  // Form validation\n  function clearFormErrors(formElement) {\n    formElement.querySelectorAll('.form-input, .form-select').forEach(input => {\n      input.setCustomValidity('');\n    });\n    formElement.querySelectorAll('.error-message').forEach(span => {\n      span.textContent = '';\n    });\n  }\n\n  function showFieldError(inputElement, message) {\n    const helpSpan = inputElement.parentElement.querySelector('.help-message');\n    const errorSpan = inputElement.parentElement.querySelector('.error-message');\n\n    inputElement.setCustomValidity(message);\n    errorSpan.textContent = message;\n    if (helpSpan) {\n      helpSpan.remove();\n    }\n  }\n\n  function showNotification(message, type = 'info') { // types: info, success, error, warning\n    const notification = document.createElement('div');\n    notification.classList.add('notification', type);\n    notification.textContent = message;\n\n    notificationArea.appendChild(notification);\n\n    // Remove notification from DOM after animation completes\n    notification.addEventListener('animationend', (e) => {\n      if (e.animationName === 'fadeOutNotification') {\n        notification.remove();\n      }\n    });\n  }\n\n  function renderTagCloud(tags, activeTag) {\n    if (!tagFilterArea) return;\n    clearElement(tagFilterArea);\n\n    if (tags && tags.length > 0) {\n      tags.forEach(tag => {\n        const tagElement = document.createElement('span');\n        tagElement.classList.add('tag-filter-item');\n        tagElement.textContent = tag;\n        tagElement.dataset.tag = tag;\n        if (tag === activeTag) {\n          tagElement.classList.add('active');\n        }\n        tagFilterArea.appendChild(tagElement);\n      });\n    } else {\n      const noTagsMsg = document.createElement('span');\n      noTagsMsg.textContent = 'No tags available for filtering.';\n      noTagsMsg.style.fontSize = '0.9em';\n      noTagsMsg.style.color = '#666';\n      tagFilterArea.appendChild(noTagsMsg);\n    }\n\n    if (clearTagFilterBtn) {\n      clearTagFilterBtn.style.display = activeTag ? 'inline' : 'none';\n    }\n    if (clearTagFilterBtn && !tagFilterArea.contains(clearTagFilterBtn) && tags.length > 0) {\n      tagFilterArea.appendChild(clearTagFilterBtn);\n    }\n  }\n\n  // Initial state\n  function initializeUI() {\n    updateProjectTitle('Loading projects...');\n    clearElement(todosListUL);\n    const li = document.createElement('li');\n    li.textContent = 'Select or add a project to see your tasks.';\n    todosListUL.appendChild(li);\n    addTodoBtn.style.display = 'none';\n  }\n\n  return {\n    renderProjects,\n    renderTodos,\n    updateProjectTitle,\n    openProjectModal,\n    closeProjectModal,\n    openTodoModal,\n    closeTodoModal,\n    getProjectFormData,\n    getTodoFormData,\n    clearElement,\n    showNotification,\n    renderTagCloud,\n    initializeUI,\n    elements: {\n      projectModal,\n      todoModal,\n      projectsListUL,\n      todosListUL,\n      addProjectBtn,\n      addTodoBtn,\n      projectForm,\n      todoForm,\n      closeProjectModalBtn,\n      closeTodoModalBtn,\n      clearTagFilterBtn,\n    },\n  };\n})();\n\nexport default domController;","import appLogic from './appLogic.js';\nimport domController from './domController.js';\nimport { format as formatDateFns, startOfDay as startOfDayFns } from 'date-fns';\nimport './style.css';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let currentSearchTerm = '';\n  let currentPriorityFilter = 'all';\n  let currentTagFilter = null;\n  let currentSortCriteria = { field: 'dueDate', direction: 'asc' };\n  let currentDueDateFilter = null;\n\n  const searchInput = document.getElementById('search-todos-input');\n  const priorityFilterSelect = document.getElementById('priority-filter');\n  const tagFilterArea = document.getElementById('tag-filter-area');\n  const clearTagFilterBtn = document.getElementById('clear-tag-filter-btn');\n  const sortTodosSelect = document.getElementById('sort-todos');\n  const dueDateFilterInput = document.getElementById('due-date-filter-input');\n  const clearDateFilterBtn = document.getElementById('clear-date-filter-btn');\n  const showTodayTasksBtn = document.getElementById('show-today-tasks-btn');\n\n  function refreshTagCloud(isGlobalMode = false) {\n    let tagsForCloud = [];\n    const currentProject = appLogic.getCurrentProject();\n\n    if (isGlobalMode) { // True if date filter or global search is active\n      tagsForCloud = appLogic.getTagsAcrossProjects();\n    } else if (currentProject) {\n      const projectData = appLogic.getProjectById(currentProject.id);\n      tagsForCloud = projectData ? projectData.getUniqueTags() : [];\n    } else {\n      tagsForCloud = appLogic.getTagsAcrossProjects();\n    }\n    domController.renderTagCloud(tagsForCloud, currentTagFilter);\n  }\n\n  function updateAndRenderTodos() {\n    let todosToDisplay = [];\n    let viewTitle = '';\n    let isGlobalMode = false;\n    const currentProjectFromSidebar = appLogic.getCurrentProject();\n\n    // Global due date mode\n    if (currentDueDateFilter) {\n      viewTitle = `Tasks due on ${formatDateFns(new Date(currentDueDateFilter + 'T00:00:00'), 'MMM dd, yyyy')}`;\n      todosToDisplay = appLogic.getTodosDueOnDate(currentDueDateFilter);\n      isGlobalMode = true;\n      if (clearDateFilterBtn) clearDateFilterBtn.style.display = 'block';\n      // Clear search when date filter is active\n      if (searchInput) searchInput.value = '';\n      currentSearchTerm = '';\n      // Deselect project in sidebar visually\n      refreshProjectsList(null);\n\n      // Global search mode\n    } else if (currentSearchTerm && currentSearchTerm.trim() !== '') {\n      viewTitle = `Search results for '${currentSearchTerm}'`;\n      const allTodosWithProjectInfo = appLogic.getTodosWithProjectInfo();\n      todosToDisplay = appLogic.searchTodosInList(allTodosWithProjectInfo, currentSearchTerm);\n      isGlobalMode = true;\n      if (clearDateFilterBtn) clearDateFilterBtn.style.display = 'none';\n      // Deselect project in sidebar visually\n      refreshProjectsList(null);\n\n      // Project mode\n    } else if (currentProjectFromSidebar) {\n      const projectData = appLogic.getProjectById(currentProjectFromSidebar.id);\n      todosToDisplay = projectData ? projectData.getAllTodos() : [];\n      viewTitle = projectData ? projectData.name : 'Project not found';\n      refreshProjectsList(currentProjectFromSidebar.id);\n      if (clearDateFilterBtn) clearDateFilterBtn.style.display = 'none';\n      refreshProjectsList(currentProjectFromSidebar.id);\n\n      // Default or no selection\n    } else {\n      viewTitle = 'Select a date, project, or search';\n      todosToDisplay = [];\n      isGlobalMode = false;\n      if (clearDateFilterBtn) clearDateFilterBtn.style.display = 'none';\n      refreshProjectsList(null);\n    }\n\n    refreshTagCloud(isGlobalMode || !currentProjectFromSidebar);\n\n    let filteredTodos = [...todosToDisplay];\n    if (currentPriorityFilter !== 'all') {\n      filteredTodos = filteredTodos.filter(todo => todo.priority === currentPriorityFilter);\n    }\n\n    if (currentTagFilter) {\n      const lowerTagFilter = currentTagFilter.toLowerCase();\n      filteredTodos = filteredTodos.filter(todo =>\n        todo.tags.some(t => t.toLowerCase() === lowerTagFilter)\n      );\n    }\n\n    let sortedTodos = appLogic.sortTodos(filteredTodos, currentSortCriteria.field, currentSortCriteria.direction);\n\n    const renderData = {\n      name: viewTitle,\n      todos: sortedTodos,\n      isGlobalSearch: isGlobalMode\n    };\n\n    domController.renderTodos(renderData);\n    domController.updateProjectTitle(viewTitle);\n    domController.elements.addTodoBtn.style.display = currentProjectFromSidebar ? 'block' : 'none';\n  }\n\n  if (dueDateFilterInput) {\n    dueDateFilterInput.addEventListener('change', (e) => {\n      currentDueDateFilter = e.target.value;\n      currentSearchTerm = '';\n      if (searchInput) searchInput.value = '';\n      updateAndRenderTodos();\n    });\n  }\n\n  if (clearDateFilterBtn) {\n    clearDateFilterBtn.addEventListener('click', () => {\n      currentDueDateFilter = null;\n      if (dueDateFilterInput) dueDateFilterInput.value = '';\n      clearDateFilterBtn.style.display = 'none';\n      updateAndRenderTodos();\n    });\n  }\n\n  if (showTodayTasksBtn) {\n    showTodayTasksBtn.addEventListener('click', () => {\n      const today = formatDateFns(startOfDayFns(new Date()), 'yyyy-MM-dd');\n      currentDueDateFilter = today;\n      if (dueDateFilterInput) dueDateFilterInput.value = today;\n      currentSearchTerm = '';\n      if (searchInput) searchInput.value = '';\n      updateAndRenderTodos();\n    });\n  }\n\n  if (searchInput) {\n    searchInput.addEventListener('input', (e) => {\n      currentSearchTerm = e.target.value;\n      if (currentSearchTerm.trim() !== '') {\n        currentDueDateFilter = null;\n        if (dueDateFilterInput) dueDateFilterInput.value = '';\n        if (clearDateFilterBtn) clearDateFilterBtn.style.display = 'none';\n      }\n      updateAndRenderTodos();\n    });\n  }\n\n  if (priorityFilterSelect) {\n    priorityFilterSelect.addEventListener('change', (e) => {\n      currentPriorityFilter = e.target.value;\n      updateAndRenderTodos();\n    });\n  }\n\n  if (tagFilterArea) {\n    tagFilterArea.addEventListener('click', (e) => {\n      if (e.target.classList.contains('tag-filter-item')) {\n        const clickedTag = e.target.dataset.tag;\n        if (currentTagFilter === clickedTag) {\n          currentTagFilter = null; // Toggle off\n        } else {\n          currentTagFilter = clickedTag;\n        }\n        updateAndRenderTodos();\n      }\n    });\n  }\n\n  if (clearTagFilterBtn) {\n    clearTagFilterBtn.addEventListener('click', () => {\n      if (currentTagFilter !== null) {\n        currentTagFilter = null;\n        updateAndRenderTodos();\n      }\n    });\n  }\n\n  // Project event listeners\n  domController.elements.addProjectBtn.addEventListener('click', () => {\n    domController.openProjectModal();\n  });\n\n  domController.elements.closeProjectModalBtn.addEventListener('click', () => {\n    domController.closeProjectModal();\n  });\n\n  // Project form submission\n  domController.elements.projectForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const projectData = domController.getProjectFormData();\n    if (projectData) {\n      let result;\n      let action = 'added';\n      if (projectData.id) { // Editing existing project\n        result = appLogic.updateProject(projectData.id, projectData.name);\n        action = 'updated';\n        if (result && result.error === 'duplicate') {\n          domController.showNotification(`Project name \"${projectData.name}\" already exists.`, 'error');\n          return;\n        }\n      } else { // Adding new project\n        result = appLogic.addProject(projectData.name);\n      }\n\n      if (result && !result.error) {\n        if (action === 'added') appLogic.setCurrentProject(result.id);\n        refreshProjectsList();\n        updateAndRenderTodos();\n        domController.closeProjectModal();\n        domController.showNotification(`Project \"${result.name}\" ${action}.`, 'success');\n      } else if (action === 'added') {\n        domController.showNotification('Unable to add project. Name might be invalid.', 'error');\n      }\n    }\n  });\n\n  if (sortTodosSelect) {\n    sortTodosSelect.addEventListener('change', (e) => {\n      const [field, direction] = e.target.value.split('_');\n      currentSortCriteria = { field, direction };\n      updateAndRenderTodos();\n    });\n  }\n\n  // Helper function to manage multiple dropdowns\n  function closeAllDropdowns(exceptThisOne = null) {\n    document.querySelectorAll('.actions-dropdown.visible').forEach(dropdown => {\n      if (dropdown !== exceptThisOne) {\n        dropdown.classList.remove('visible');\n      }\n    });\n  }\n\n  document.addEventListener('click', (e) => {\n    // If click is not on a more button or inside a dropdown, close all dropdowns\n    if (!e.target.closest('.more-actions-btn') && !e.target.closest('.actions-dropdown')) {\n      closeAllDropdowns();\n    }\n  });\n\n  // Actions on a project\n  domController.elements.projectsListUL.addEventListener('click', (e) => {\n    const projectLi = e.target.closest('li[data-project-id]');\n    if (!projectLi) return;\n\n    const projectId = projectLi.dataset.projectId;\n    if (e.target.classList.contains('more-actions-btn')) {\n      e.stopPropagation(); // Prevent project selection click when opening dropdown\n      const dropdown = e.target.nextElementSibling;\n      if (dropdown && dropdown.classList.contains('actions-dropdown')) {\n        closeAllDropdowns(dropdown);\n        dropdown.classList.toggle('visible');\n      }\n    } else if (e.target.classList.contains('edit-project')) {\n      closeAllDropdowns();\n      const projectToEdit = appLogic.getProjectById(projectId);\n      if (projectToEdit) {\n        domController.openProjectModal(projectToEdit);\n      }\n    } else if (e.target.classList.contains('delete-project')) {\n      closeAllDropdowns();\n      const projectToDelete = appLogic.getProjectById(projectId);\n      if (projectToDelete && confirm(`You will permanently delete project \"${projectToDelete.name}\" and all its tasks.`)) {\n        const result = appLogic.removeProject(projectId);\n        if (result.success) {\n          domController.showNotification(`Project \"${result.removedProjectName}\" deleted.`, 'success');\n          refreshProjectsList();\n          // If the current project was deleted, updateAndRenderTodos will handle it based on new currentProject from appLogic\n          updateAndRenderTodos();\n        } else if (result.error === 'last_project') {\n          domController.showNotification('Unable to delete the last project.', 'error');\n        } else {\n          domController.showNotification('Unable to delete project.', 'error');\n        }\n      }\n    } else if (e.target.closest('.project-name') || e.target === projectLi) { // Click on name or li itself\n      // Ensure dropdown clicks don't trigger project selection\n      if (!e.target.closest('.actions-dropdown') && !e.target.closest('.more-actions-btn')) {\n        closeAllDropdowns();\n\n        const selectedProjectId = appLogic.getCurrentProject()?.id;\n        if (selectedProjectId !== projectId || currentDueDateFilter || currentSearchTerm) {\n          appLogic.setCurrentProject(projectId);\n          currentSearchTerm = '';\n\n          if (searchInput) searchInput.value = '';\n          currentPriorityFilter = 'all';\n          if (priorityFilterSelect) priorityFilterSelect.value = 'all';\n          currentTagFilter = null;\n          currentSortCriteria = { field: 'dueDate', direction: 'asc' };\n          if (sortTodosSelect) sortTodosSelect.value = 'dueDate_asc';\n          currentDueDateFilter = null;\n          if (dueDateFilterInput) dueDateFilterInput.value = '';\n          if (clearDateFilterBtn) clearDateFilterBtn.style.display = 'none';\n          updateAndRenderTodos();\n        }\n      }\n    }\n  });\n\n  // To-do event listeners\n  domController.elements.addTodoBtn.addEventListener('click', () => {\n    const currentProject = appLogic.getCurrentProject();\n    if (currentProject) {\n      domController.openTodoModal(null, currentProject.id);\n    } else {\n      domController.showNotification('Please select project to add task.', 'warning');\n    }\n  });\n\n  domController.elements.closeTodoModalBtn.addEventListener('click', () => {\n    domController.closeTodoModal();\n  });\n\n  // To-do form submission\n  domController.elements.todoForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const todoData = domController.getTodoFormData();\n    if (todoData) {\n      let success = false;\n      if (todoData.id) { // Editing existing todo\n        if (appLogic.updateTodoInProject(todoData.currentProjectId, todoData.id, todoData)) {\n          success = true;\n        }\n      } else { // Adding new todo\n        if (appLogic.addTodoToProject(todoData.currentProjectId, todoData)) {\n          success = true;\n        }\n      }\n\n      if (success) {\n        updateAndRenderTodos();\n        domController.closeTodoModal();\n        domController.showNotification(todoData.id ? 'Task updated.' : 'Task added.', 'success');\n      } else {\n        domController.showNotification('Unable to update task.', 'error');\n      }\n    }\n  });\n\n  // Actions on todo items\n  domController.elements.todosListUL.addEventListener('click', (e) => {\n    const target = e.target;\n    const todoLi = target.closest('li[data-todo-id]');\n    if (!todoLi) return;\n\n    const todoId = todoLi.dataset.todoId;\n    // Determine the project ID\n    let projectIdForAction = todoLi.dataset.originalProjectId; // From global search\n    if (!projectIdForAction) {\n      const currentProject = appLogic.getCurrentProject();\n      if (currentProject) {\n        projectIdForAction = currentProject.id;\n      }\n    }\n\n    if (!todoId || !projectIdForAction) return;\n\n    if (e.target.classList.contains('more-actions-btn')) {\n      e.stopPropagation();\n      const dropdown = e.target.nextElementSibling;\n      if (dropdown && dropdown.classList.contains('actions-dropdown')) {\n        closeAllDropdowns(dropdown);\n        dropdown.classList.toggle('visible');\n      }\n\n    } else if (target.classList.contains('delete-todo')) {\n      closeAllDropdowns();\n      const project = appLogic.getProjectById(projectIdForAction);\n      const todoToDelete = project.getTodoById(todoId);\n      if (confirm(`You will permanently delete task \"${todoToDelete.title}\".`)) {\n        appLogic.removeTodoFromProject(projectIdForAction, todoId);\n        domController.showNotification('Task deleted.', 'success');\n        updateAndRenderTodos();\n      }\n\n    } else if (target.classList.contains('edit-todo')) {\n      closeAllDropdowns();\n      const todoToEdit = appLogic\n        .getProjectById(projectIdForAction)\n        ?.getTodoById(todoId);\n      if (todoToEdit) {\n        domController.openTodoModal(todoToEdit, projectIdForAction);\n      }\n\n    } else if (target.classList.contains('todo-checkbox')) {\n      closeAllDropdowns();\n      appLogic.toggleTodoComplete(projectIdForAction, todoId);\n      updateAndRenderTodos();\n      \n    } else if (target.classList.contains('expand-todo-btn')) {\n      closeAllDropdowns();\n      const detailsDiv = todoLi.querySelector('.todo-full-details');\n      if (detailsDiv) {\n        const isHidden = detailsDiv.classList.contains('hidden');\n        if (isHidden) {\n          detailsDiv.classList.remove('hidden');\n          detailsDiv.classList.add('visible');\n          target.innerHTML = '&#8722;'; // Minus sign (hide)\n          target.title = 'Hide details';\n          todoLi.classList.add('details-expanded');\n        } else {\n          detailsDiv.classList.add('hidden');\n          detailsDiv.classList.remove('visible');\n          target.innerHTML = '&#43;'; // Plus sign (show)\n          target.title = 'Show details';\n          todoLi.classList.remove('details-expanded');\n        }\n      }\n    }\n  });\n\n  // Close modals if clicked outside\n  window.addEventListener('click', (e) => {\n    if (e.target === domController.elements.projectModal) {\n      domController.closeProjectModal();\n    }\n    if (e.target === domController.elements.todoModal) {\n      domController.closeTodoModal();\n    }\n  });\n\n  // Initial render based on loaded data\n  if (appLogic.getCurrentProject()) {\n    updateAndRenderTodos();\n  } else if (appLogic.getAllProjects().length > 0) {\n    // If no current project but projects exist, select the first one\n    const firstProject = appLogic.getAllProjects()[0];\n    appLogic.setCurrentProject(firstProject.id);\n    refreshProjectsList();\n    updateAndRenderTodos();\n  } else {\n    domController.updateProjectTitle('Add a project');\n    domController.renderTodos(null);\n  }\n\n  // Helper function to refresh project list\n  function refreshProjectsList(currentProjectId = null) {\n    const projects = appLogic.getAllProjects();\n    domController.renderProjects(projects, currentProjectId);\n  }\n\n  // Initial setup\n  domController.initializeUI();\n  refreshProjectsList(appLogic.getCurrentProject()?.id); // Initially highlight selected project\n\n  // Default to today's tasks\n  const todayDefault = formatDateFns(startOfDayFns(new Date()), 'yyyy-MM-dd');\n  currentDueDateFilter = todayDefault;\n  if (dueDateFilterInput) dueDateFilterInput.value = todayDefault;\n  if (clearDateFilterBtn) clearDateFilterBtn.style.display = 'block';\n\n  updateAndRenderTodos(); //\n});"],"names":["constructor","title","description","dueDate","priority","tags","arguments","length","undefined","completed","this","id","concat","Date","now","Math","random","toString","slice","isNaN","valueOf","trim","parsedDate","Array","isArray","toggleComplete","updateDetails","details","includes","map","tag","filter","tagsString","setTagsFromString","addTag","trimmedTag","push","removeTag","tagToRemove","trimmedTagToRemove","getTagsString","join","split","name","todos","addTodo","todoItem","Todo","some","todo","removeTodo","todoId","getTodoById","find","getAllTodos","getTodosByPriority","priorityLevel","getTodosByCompletion","completionStatus","getTodosByTag","toLowerCase","t","getUniqueTags","allTags","Set","forEach","add","from","sort","STORAGE_KEY","data","serializedData","JSON","stringify","localStorage","setItem","error","console","getItem","parse","appLogic","projects","currentProject","saveProjects","storage","getProjectById","projectId","p","getTodosAcrossProjects","reduce","acc","project","priorityOrder","loadedData","plainProject","Project","plainTodo","workProject","personalProject","learningProject","createSampleData","loadProjects","addProject","newProject","updateProject","newName","projectToUpdate","removeProject","projectIndex","findIndex","removedProject","splice","success","removedProjectName","newCurrentProject","getAllProjects","setCurrentProject","getCurrentProject","addTodoToProject","todoDetails","newTodo","removeTodoFromProject","updateTodoInProject","updatedDetails","otherDetails","_objectWithoutProperties","_excluded","toggleTodoComplete","getTodosWithProjectInfo","allTodosWithProjectInfo","_objectSpread","originalProjectId","projectName","getTodosDueOnDate","targetDateString","targetDate","startOfDay","dueTodosWithProjectInfo","isEqual","searchTodosInList","searchTerm","lowerSearchTerm","getTagsAcrossProjects","filterTodosByTagAcrossProjects","allTodos","filterTodosByPriorityAcrossProjects","sortTodos","sortField","sortDirection","sorted","a","b","valA","valB","comparison","domController","projectsListUL","document","getElementById","addProjectBtn","currentProjectTitle","addTodoBtn","todosListUL","tagFilterArea","clearTagFilterBtn","notificationArea","projectModal","projectForm","projectIdInput","projectNameInput","saveProjectBtn","closeProjectModalBtn","todoModal","todoForm","todoIdInput","todoTitleInput","todoDescriptionInput","todoDueDateInput","todoPriorityInput","todoTagsInput","closeTodoModalBtn","clearElement","element","firstChild","removeChild","updateProjectTitle","textContent","clearFormErrors","formElement","querySelectorAll","input","setCustomValidity","span","showFieldError","inputElement","message","helpSpan","parentElement","querySelector","errorSpan","remove","renderProjects","currentProjectId","createElement","appendChild","li","dataset","nameSpan","classList","actionsDiv","moreBtn","innerHTML","dropdown","editLi","deleteLi","renderTodos","projectOrSearchResults","isGlobalSearch","todoPreviewContent","checkbox","type","checked","todoInfoDiv","titleSpan","dueDateSpan","date","isValidDate","format","projectLabelSpan","tagsDiv","tagSpan","expandBtn","fullDetailsDiv","descriptionP","descriptionText","createTextNode","priorityP","priorityText","charAt","toUpperCase","openProjectModal","projectToEdit","reset","value","style","display","focus","closeProjectModal","openTodoModal","todoToEdit","closeTodoModal","getProjectFormData","isValid","validity","valueMissing","getTodoFormData","showNotification","notification","addEventListener","e","animationName","renderTagCloud","activeTag","tagElement","noTagsMsg","fontSize","color","contains","initializeUI","elements","_appLogic$getCurrentP2","currentSearchTerm","currentPriorityFilter","currentTagFilter","currentSortCriteria","field","direction","currentDueDateFilter","searchInput","priorityFilterSelect","sortTodosSelect","dueDateFilterInput","clearDateFilterBtn","showTodayTasksBtn","updateAndRenderTodos","todosToDisplay","viewTitle","isGlobalMode","currentProjectFromSidebar","formatDateFns","refreshProjectsList","projectData","tagsForCloud","refreshTagCloud","filteredTodos","lowerTagFilter","renderData","closeAllDropdowns","exceptThisOne","target","today","startOfDayFns","clickedTag","preventDefault","result","action","closest","projectLi","stopPropagation","nextElementSibling","toggle","projectToDelete","confirm","_appLogic$getCurrentP","todoData","todoLi","projectIdForAction","todoToDelete","_appLogic$getProjectB","detailsDiv","window","firstProject","todayDefault"],"sourceRoot":""}