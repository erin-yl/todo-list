{"version":3,"file":"main.a0e05bf6ea1fb304758a.js","mappings":"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","sources":["webpack://todo-list/./src/todo.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/storage.js","webpack://todo-list/./src/appLogic.js","webpack://todo-list/./src/domController.js","webpack://todo-list/./src/index.js"],"sourcesContent":["// Todo item module that manages todo objects\n\nclass Todo {\n  constructor(\n    title,\n    description,\n    dueDate,\n    priority,\n    tags = [],\n    completed = false,\n  ) {\n    this.id = `todo-${Date.now()}-${Math.random().toString(36).slice(2, 11)}`; // Unique ID\n    this.title = title;\n    this.description = description;\n\n    // Standardize dueDate to be a Date object or null\n    this.dueDate = null;\n    if (dueDate instanceof Date && !isNaN(dueDate.valueOf())) {\n      // For sample data using Date objects\n      this.dueDate = dueDate;\n    } else if (typeof dueDate === 'string' && dueDate.trim() !== '') {\n      // For HTML form inputs\n      const parsedDate = new Date(dueDate.trim());\n      this.dueDate = !isNaN(parsedDate.valueOf()) ? parsedDate : null;\n    } else {\n      this.dueDate = null;\n    }\n\n    this.priority = priority;\n    this.tags = Array.isArray(tags) ? tags : [];\n    this.completed = completed;\n  }\n\n  toggleComplete() {\n    this.completed = !this.completed;\n  }\n\n  updateDetails(details) {\n    if (details.title !== undefined) this.title = details.title;\n    if (details.description !== undefined) this.description = details.description;\n\n    if (details.dueDate !== undefined) {\n      if (details.dueDate instanceof Date && !isNaN(details.dueDate.valueOf())) {\n        this.dueDate = details.dueDate;\n      } else if (typeof details.dueDate === 'string' && details.dueDate.trim() !== '') {\n        const parsedDate = new Date(details.dueDate.trim());\n        this.dueDate = !isNaN(parsedDate.valueOf()) ? parsedDate : null;\n      } else {\n        this.dueDate = null;\n      }\n    }\n\n    if (details.priority) {\n      if (['low', 'medium', 'high'].includes(details.priority)) {\n        this.priority = details.priority;\n      }\n    }\n\n    if (details.tags && Array.isArray(details.tags)) {\n      this.tags = details.tags\n        .map((tag) => tag.trim())\n        .filter((tag) => tag.length > 0);\n    } else if (details.tagsString !== undefined) {\n      this.setTagsFromString(details.tagsString);\n    }\n  }\n\n  addTag(tag) {\n    const trimmedTag = tag.trim();\n    if (trimmedTag && !this.tags.includes(trimmedTag)) {\n      this.tags.push(trimmedTag);\n    }\n  }\n\n  removeTag(tagToRemove) {\n    const trimmedTagToRemove = tagToRemove.trim();\n    this.tags = this.tags.filter((tag) => tag !== trimmedTagToRemove);\n  }\n\n  // Helper to get a string representation of tags\n  getTagsString() {\n    return this.tags.join(', ');\n  }\n\n  // Helper to set tags from a comma-separated string\n  setTagsFromString(tagsString) {\n    if (typeof tagsString === 'string') {\n      this.tags = tagsString\n        .split(',')\n        .map((tag) => tag.trim())\n        .filter((tag) => tag.length > 0);\n    }\n  }\n}\n\nexport default Todo;","// Project module that manages a collection of todo items\n\nimport Todo from './todo.js';\n\nclass Project {\n  constructor(name) {\n    this.id = `project-${Date.now()}-${Math.random().toString(36).slice(2, 11)}`; // Unique ID\n    this.name = name;\n    this.todos = [];\n  }\n\n  addTodo(todoItem) {\n    if (!(todoItem instanceof Todo)) return false;\n    if (this.todos.some((todo) => todo.id === todoItem.id)) return false;\n\n    this.todos.push(todoItem);\n    return true;\n  }\n\n  removeTodo(todoId) {\n    this.todos = this.todos.filter((todo) => todo.id !== todoId);\n  }\n\n  getTodoById(todoId) {\n    return this.todos.find((todo) => todo.id === todoId);\n  }\n\n  getAllTodos() {\n    return [...this.todos]; // Return a copy to prevent direct modification\n  }\n\n  getTodosByPriority(priorityLevel) {\n    return this.todos.filter((todo) => todo.priority === priorityLevel);\n  }\n\n  getTodosByCompletion(completionStatus) {\n    return this.todos.filter((todo) => todo.completed === completionStatus);\n  }\n\n  getTodosByTag(tag) {\n    const trimmedTag = tag.trim().toLowerCase();\n    if (!trimmedTag) return this.getAllTodos(); // Return all todos if tag is empty\n\n    return this.todos.filter((todo) =>\n      todo.tags.some((t) => t.toLowerCase() === trimmedTag),\n    );\n  }\n\n  getUniqueTags() {\n    const allTags = new Set();\n    this.todos.forEach((todo) => {\n      todo.tags.forEach((tag) => allTags.add(tag.trim()));\n    });\n    return Array.from(allTags).sort();\n  }\n}\n\nexport default Project;","// Storage module that uses localStorage mechanism\n\nconst STORAGE_KEY = 'todoAppProjects';\n\nconst storage = {\n  saveData: function (data) {\n    // Save project objects\n    try {\n      const serializedData = JSON.stringify(data);\n      localStorage.setItem(STORAGE_KEY, serializedData);\n    } catch (error) {\n      console.error('Error saving data to localStorage:', error);\n    }\n  },\n\n  loadData: function () {\n    try {\n      const serializedData = localStorage.getItem(STORAGE_KEY);\n      if (serializedData === null) {\n        return undefined;\n      }\n      return JSON.parse(serializedData);\n    } catch (error) {\n      console.error('Error loading data from localStorage:', error);\n      return undefined;\n    }\n  },\n\n  clearData: function () {\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n    } catch (error) {\n      console.error('Error clearing data from localStorage:', error);\n    }\n  },\n};\n\nexport default storage;\n","// App controller module that handles the core logic\n\nimport Project from './project.js';\nimport Todo from './todo.js';\nimport storage from './storage.js';\n\nconst appLogic = (() => {\n  let projects = [];\n  let currentProject = null;\n\n  function rehydrateProjects(plainProjects) {\n    return plainProjects.map((plainProject) => {\n      const project = new Project(plainProject.name);\n      project.id = plainProject.id;\n      project.todos = plainProject.todos.map((plainTodo) => {\n        const todo = new Todo(\n          plainTodo.title,\n          plainTodo.description,\n          plainTodo.dueDate,\n          plainTodo.priority,\n          plainTodo.tags || [],\n          plainTodo.completed,\n        );\n        todo.id = plainTodo.id;\n        return todo;\n      });\n      return project;\n    });\n  }\n\n  function createSampleData() {\n    const workProject = new Project('Work');\n    workProject.addTodo(new Todo('Finish Q2 report', 'Compile required data and finalize the conclusion.', new Date(2025, 4, 26), 'high', ['report'], false));\n    workProject.addTodo(new Todo('Team meeting prep', `Prepare agenda and slides for Monday's team meeting.`, new Date(2025, 5, 6), 'medium', ['meeting'], false));\n    workProject.addTodo(new Todo('Client follow-up', 'Call John Doe regarding project Alpha.', '', 'medium', ['client'], true));\n\n    const personalProject = new Project('Personal');\n    personalProject.addTodo(new Todo('Grocery shopping', 'Milk, eggs, chicken, fruits.', new Date(2025, 4, 20), 'low', ['home', 'shopping'], false));\n    personalProject.addTodo(new Todo('Book doctor appointment', 'Annual check-up.', new Date(2025, 5, 10), 'high', ['health'], false));\n\n    const learningProject = new Project('Learning');\n    learningProject.addTodo(new Todo('Webpack Deep Dive', 'Understand loaders and plugins.', new Date(2025, 4, 30), 'medium', ['dev'], true));\n    learningProject.addTodo(new Todo('Read \"The Pragmatic Programmer\"', 'Chapter 3-5', '', 'low', ['reading', 'dev'], false));\n\n    projects = [workProject, personalProject, learningProject];\n    currentProject = workProject;\n    saveProjects();\n  }\n\n  function loadProjects() {\n    const loadedData = storage.loadData();\n    if (loadedData && loadedData.length > 0) {\n      projects = rehydrateProjects(loadedData);\n      currentProject = projects[0] || null;\n    } else {\n      createSampleData();\n    }\n  }\n\n  function saveProjects() {\n    storage.saveData(projects);\n  }\n\n  // Project management\n  function addProject(name) {\n    if (\n      name &&\n      !projects.find((p) => p.name.toLowerCase() === name.toLowerCase())\n    ) {\n      const newProject = new Project(name);\n      projects.push(newProject);\n      saveProjects();\n      return newProject;\n    }\n    return null;\n  }\n\n  function updateProject(projectId, newName) {\n    const projectToUpdate = getProjectById(projectId);\n    if (!projectToUpdate) {\n      return null;\n    }\n    if (projects.some(p => p.id !== projectId && p.name.toLowerCase() === newName.toLowerCase())) {\n      return { error: 'duplicate', project: projectToUpdate };\n    }\n    projectToUpdate.name = newName;\n    saveProjects();\n    return projectToUpdate;\n  }\n\n  function removeProject(projectId) {\n    const projectIndex = projects.findIndex(p => p.id === projectId);\n    if (projectIndex > -1) {\n      if (projects.length === 1) {\n        return { error: 'last_project' };\n      }\n      const removedProject = projects.splice(projectIndex, 1)[0];\n      if (currentProject && currentProject.id === projectId) {\n        currentProject = projects.length > 0 ? projects[0] : null;\n      }\n      saveProjects();\n      return { success: true, removedProjectName: removedProject.name, newCurrentProject: currentProject };\n    }\n    return { error: 'not_found' };\n  }\n\n  function getProjectById(projectId) {\n    return projects.find((p) => p.id === projectId);\n  }\n\n  function getAllProjects() {\n    return [...projects];\n  }\n\n  function getCurrentProject() {\n    return currentProject;\n  }\n\n  function setCurrentProject(projectId) {\n    const project = getProjectById(projectId);\n    if (project) {\n      currentProject = project;\n      return true;\n    }\n    return false;\n  }\n\n  // To-do management\n  function addTodoToProject(projectId, todoDetails) {\n    const project = getProjectById(projectId);\n    if (project) {\n      const { title, description, dueDate, priority, tagsString } = todoDetails;\n      const newTodo = new Todo(title, description, dueDate, priority);\n      if (tagsString) {\n        newTodo.setTagsFromString(tagsString);\n      }\n      project.addTodo(newTodo);\n      saveProjects();\n      return newTodo;\n    }\n    return null;\n  }\n\n  function removeTodoFromProject(projectId, todoId) {\n    const project = getProjectById(projectId);\n    if (project) {\n      project.removeTodo(todoId);\n      saveProjects();\n      return true;\n    }\n    return false;\n  }\n\n  function updateTodoInProject(projectId, todoId, updatedDetails) {\n    const project = getProjectById(projectId);\n    if (project) {\n      const todo = project.getTodoById(todoId);\n      if (todo) {\n        if (updatedDetails.tagsString !== undefined) {\n          todo.setTagsFromString(updatedDetails.tagsString);\n          // Avoid passing tagsString since todo.updateDetails expects tags as an array\n          // eslint-disable-next-line no-unused-vars\n          const { tagsString, ...otherDetails } = updatedDetails;\n          todo.updateDetails(otherDetails);\n        } else {\n          todo.updateDetails(updatedDetails);\n        }\n        saveProjects();\n        return todo;\n      }\n    }\n    return null;\n  }\n\n  function toggleTodoComplete(projectId, todoId) {\n    const project = getProjectById(projectId);\n    if (project) {\n      const todo = project.getTodoById(todoId);\n      if (todo) {\n        todo.toggleComplete();\n        saveProjects();\n        return todo;\n      }\n    }\n    return null;\n  }\n\n  function getAllTodosAcrossProjects() {\n    return projects.reduce(\n      (acc, project) => acc.concat(project.getAllTodos()),\n      [],\n    );\n  }\n\n  function getAllTodosWithProjectInfo() {\n    const allTodosWithProjectInfo = [];\n    projects.forEach(project => {\n      project.getAllTodos().forEach(todo => {\n        allTodosWithProjectInfo.push({\n          ...todo,\n          originalProjectId: project.id,\n          projectName: project.name\n        });\n      });\n    });\n    return allTodosWithProjectInfo;\n  }\n\n  function searchTodosInList(todos, searchTerm) {\n    if (!searchTerm || searchTerm.trim() === '') {\n      return todos;\n    }\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    return todos.filter(todo =>\n      todo.title.toLowerCase().includes(lowerSearchTerm) ||\n      todo.description.toLowerCase().includes(lowerSearchTerm)\n    );\n  }\n\n  function getAllTagsAcrossProjects() {\n    const allTags = new Set();\n    projects.forEach((project) => {\n      project.getUniqueTags().forEach((tag) => allTags.add(tag));\n    });\n    return Array.from(allTags).sort();\n  }\n\n  function filterTodosByTagAcrossProjects(tag) {\n    const allTodos = getAllTodosAcrossProjects();\n    const trimmedTag = tag.trim().toLowerCase();\n    if (!trimmedTag) return allTodos;\n    return allTodos.filter((todo) =>\n      todo.tags.some((t) => t.toLowerCase() === trimmedTag),\n    );\n  }\n\n  function filterTodosByPriorityAcrossProjects(priorityLevel) {\n    const allTodos = getAllTodosAcrossProjects();\n    return allTodos.filter((todo) => todo.priority === priorityLevel);\n  }\n\n  const priorityOrder = { 'high': 1, 'medium': 2, 'low': 3 };\n\n  function sortTodos(todos, sortField, sortDirection = 'asc') {\n    const sorted = [...todos];\n\n    sorted.sort((a, b) => {\n      let valA, valB;\n\n      switch (sortField) {\n        case 'title':\n          valA = a.title.toLowerCase();\n          valB = b.title.toLowerCase();\n          break;\n        case 'dueDate':\n          // For null due dates, sort them to the end\n          if (a.dueDate === null && b.dueDate === null) return 0;\n          if (a.dueDate === null) return 1; // a comes after b\n          if (b.dueDate === null) return -1; // a comes before b\n          valA = a.dueDate;\n          valB = b.dueDate;\n          break;\n        case 'priority':\n          valA = priorityOrder[a.priority];\n          valB = priorityOrder[b.priority];\n          break;\n        default:\n          return 0; // No sorting for unknown fields\n      }\n\n      let comparison = 0;\n      if (valA > valB) {\n        comparison = 1;\n      } else if (valA < valB) {\n        comparison = -1;\n      }\n      return sortDirection === 'desc' ? comparison * -1 : comparison;\n    });\n    return sorted;\n  }\n\n  loadProjects();\n\n  return {\n    addProject,\n    updateProject,\n    removeProject,\n    getProjectById,\n    getAllProjects,\n    setCurrentProject,\n    getCurrentProject,\n    addTodoToProject,\n    removeTodoFromProject,\n    updateTodoInProject,\n    toggleTodoComplete,\n    getAllTodosAcrossProjects,\n    getAllTodosWithProjectInfo,\n    searchTodosInList,\n    getAllTagsAcrossProjects,\n    filterTodosByTagAcrossProjects,\n    filterTodosByPriorityAcrossProjects,\n    sortTodos,\n  };\n})();\n\nexport default appLogic;","// Display controller module that handles DOM manipulations\n\nimport { format, isValid as isValidDate } from 'date-fns';\n\nconst domController = (() => {\n  // DOM element selectors\n  const projectsListUL = document.getElementById('projects-list');\n  const addProjectBtn = document.getElementById('add-project-btn');\n  const currentProjectTitle = document.getElementById('current-project-title');\n  const addTodoBtn = document.getElementById('add-todo-btn');\n  const todosListUL = document.getElementById('todos-list');\n  const tagFilterArea = document.getElementById('tag-filter-area');\n  const tagFilterClearBtn = document.getElementById('tag-filter-clear-btn');\n  const notificationArea = document.getElementById('notification-area');\n\n  // Project modal\n  const projectModal = document.getElementById('project-modal');\n  const projectForm = document.getElementById('project-form');\n  const projectIdInput = document.getElementById('project-id'); // Hidden input for project editing\n  const projectNameInput = document.getElementById('project-name-input');\n  const saveProjectBtn = document.getElementById('save-project-btn');\n  const closeProjectModalBtn = document.getElementById('close-project-modal');\n\n  // Todo modal\n  const todoModal = document.getElementById('todo-modal');\n  const todoForm = document.getElementById('todo-form');\n  const todoIdInput = document.getElementById('todo-id'); // Hidden input for todo editing\n  const todoTitleInput = document.getElementById('todo-title-input');\n  const todoDescriptionInput = document.getElementById('todo-description-input',\n  );\n  const todoDueDateInput = document.getElementById('todo-dueDate-input');\n  const todoPriorityInput = document.getElementById('todo-priority-input');\n  const todoTagsInput = document.getElementById('todo-tags-input');\n  const closeTodoModalBtn = document.getElementById('close-todo-modal');\n\n  // Helper functions to remove all child nodes\n  function clearElement(element) {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n\n  function formatDateForDisplay(date) {\n    if (date instanceof Date && isValidDate(date)) { //\n      return format(date, 'MMM dd, yyyy'); //\n    }\n    return 'No date set';\n  }\n\n  // Project rendering\n  function renderProjects(projects, currentProjectId) {\n    clearElement(projectsListUL);\n    if (!projects || projects.length === 0) {\n      const li = document.createElement('li');\n      li.textContent = 'No projects yet.';\n      li.classList.add('no-items');\n      projectsListUL.appendChild(li);\n      return;\n    }\n\n    projects.forEach((project) => {\n      const li = document.createElement('li');\n      li.dataset.projectId = project.id;\n\n      const nameSpan = document.createElement('span');\n      nameSpan.classList.add('project-name');\n      nameSpan.textContent = project.name;\n      li.appendChild(nameSpan);\n\n      const actionsDiv = document.createElement('div');\n      actionsDiv.classList.add('project-actions');\n\n      const editBtn = document.createElement('button');\n      editBtn.innerHTML = 'Edit';\n      editBtn.classList.add('edit-project-btn');\n      editBtn.dataset.projectId = project.id;\n      editBtn.title = 'Edit project';\n\n      const deleteBtn = document.createElement('button');\n      deleteBtn.innerHTML = 'Delete';\n      deleteBtn.classList.add('delete-project-btn');\n      deleteBtn.dataset.projectId = project.id;\n      deleteBtn.title = 'Delete project';\n\n      actionsDiv.appendChild(editBtn);\n      actionsDiv.appendChild(deleteBtn);\n      li.appendChild(actionsDiv);\n\n      if (project.id === currentProjectId) {\n        li.classList.add('active');\n      }\n      projectsListUL.appendChild(li);\n    });\n  }\n\n  function updateProjectTitle(title) {\n    currentProjectTitle.textContent = title || 'No project selected';\n  }\n\n  // To-do rendering\n  function renderTodos(projectOrSearchResults) {\n    clearElement(todosListUL);\n\n    const isGlobalSearch = projectOrSearchResults && projectOrSearchResults.isGlobalSearch === true;\n    const todos = projectOrSearchResults ? projectOrSearchResults.todos : [];\n    const displayName = projectOrSearchResults ? projectOrSearchResults.name : 'Select a Project';\n\n    updateProjectTitle(displayName);\n\n    if (!todos || todos.length === 0) {\n      const li = document.createElement('li');\n      if (isGlobalSearch) {\n        li.textContent = 'No tasks found matching your search.';\n      } else if (projectOrSearchResults) {\n        li.textContent = 'No tasks in this project yet.';\n      } else {\n        li.textContent = 'Select a project or enter a search term.';\n      }\n      li.classList.add('no-items');\n      todosListUL.appendChild(li);\n\n      return;\n    }\n\n    todos.forEach(todo => {\n      const li = document.createElement('li');\n      li.dataset.todoId = todo.id;\n\n      if (isGlobalSearch && todo.originalProjectId) {\n        li.dataset.originalProjectId = todo.originalProjectId;\n      }\n      li.classList.add(`priority-${todo.priority}`);\n      if (todo.completed) {\n        li.classList.add('todo-completed');\n      }\n\n      const checkbox = document.createElement('input');\n      checkbox.type = 'checkbox';\n      checkbox.checked = todo.completed;\n      checkbox.classList.add('todo-checkbox');\n      checkbox.dataset.todoId = todo.id;\n\n      const todoInfoDiv = document.createElement('div');\n      todoInfoDiv.classList.add('todo-info');\n\n      const titleSpan = document.createElement('span');\n      titleSpan.classList.add('todo-title');\n      titleSpan.textContent = todo.title;\n\n      const dueDateSpan = document.createElement('span');\n      dueDateSpan.classList.add('todo-due-date');\n      dueDateSpan.textContent = `Due: ${formatDateForDisplay(todo.dueDate)}`;\n\n      todoInfoDiv.appendChild(checkbox);\n      todoInfoDiv.appendChild(titleSpan);\n      todoInfoDiv.appendChild(dueDateSpan);\n\n      // Project name display in global search result\n      if (isGlobalSearch && todo.projectName) {\n        const projectLabelSpan = document.createElement('span');\n        projectLabelSpan.classList.add('todo-project-label');\n        projectLabelSpan.textContent = `(Project: ${todo.projectName})`;\n        todoInfoDiv.appendChild(projectLabelSpan);\n      }\n\n      // Tags display\n      if (todo.tags && todo.tags.length > 0) {\n        const tagsDiv = document.createElement('div');\n        tagsDiv.classList.add('todo-tags-display');\n        todo.tags.forEach((tag) => {\n          const tagSpan = document.createElement('span');\n          tagSpan.classList.add('tag-label');\n          tagSpan.textContent = tag;\n          tagsDiv.appendChild(tagSpan);\n        });\n        todoInfoDiv.appendChild(tagsDiv);\n      }\n\n      const actionsDiv = document.createElement('div');\n      actionsDiv.classList.add('todo-actions');\n\n      const editBtn = document.createElement('button');\n      editBtn.textContent = 'Edit';\n      editBtn.classList.add('edit-todo-btn');\n      editBtn.dataset.todoId = todo.id;\n\n      const deleteBtn = document.createElement('button');\n      deleteBtn.textContent = 'Delete';\n      deleteBtn.classList.add('delete-todo-btn');\n      deleteBtn.dataset.todoId = todo.id;\n\n      actionsDiv.appendChild(editBtn);\n      actionsDiv.appendChild(deleteBtn);\n\n      li.appendChild(todoInfoDiv);\n      li.appendChild(actionsDiv);\n      todosListUL.appendChild(li);\n    });\n  }\n\n  // Modal handling\n  function openProjectModal(projectToEdit = null) {\n    clearFormErrors(projectForm);\n    projectForm.reset();\n    projectIdInput.value = ''; // Clear hidden ID field\n    saveProjectBtn.textContent = 'Save';\n\n    if (projectToEdit) {\n      projectIdInput.value = projectToEdit.id;\n      projectNameInput.value = projectToEdit.name;\n    }\n    projectModal.style.display = 'block';\n    projectNameInput.focus();\n  }\n\n  function closeProjectModal() {\n    projectModal.style.display = 'none';\n  }\n\n  function openTodoModal(todoToEdit = null, currentProjectId) {\n    clearFormErrors(todoForm);\n    todoForm.reset();\n    todoIdInput.value = ''; // Clear hidden ID field\n\n    if (todoToEdit) {\n      todoIdInput.value = todoToEdit.id;\n      todoTitleInput.value = todoToEdit.title;\n      todoDescriptionInput.value = todoToEdit.description;\n      todoDueDateInput.value = (todoToEdit.dueDate && isValidDate(todoToEdit.dueDate))\n        ? format(todoToEdit.dueDate, 'yyyy-MM-dd') // Format Date obj for input\n        : ''; // Empty string for null or invalid date\n      todoPriorityInput.value = todoToEdit.priority;\n      todoTagsInput.value = todoToEdit.tags ? todoToEdit.getTagsString() : '';\n    }\n    todoForm.dataset.currentProjectId = currentProjectId;\n    todoModal.style.display = 'block';\n    todoTitleInput.focus();\n  }\n\n  function closeTodoModal() {\n    todoModal.style.display = 'none';\n  }\n\n  // Form data getters\n  function getProjectFormData() {\n    clearFormErrors(projectForm);\n    let isValid = true;\n    const name = projectNameInput.value.trim();\n    const id = projectIdInput.value;\n\n    if (projectNameInput.validity.valueMissing) {\n      showFieldError(projectNameInput, 'Project name is required.');\n      isValid = false;\n    }\n    return isValid ? { id, name } : null;\n  }\n\n  function getTodoFormData() {\n    clearFormErrors(todoForm);\n    let isValid = true;\n    const title = todoTitleInput.value.trim();\n    const description = todoDescriptionInput.value.trim();\n    const dueDate = todoDueDateInput.value;\n    const priority = todoPriorityInput.value;\n    const tagsString = todoTagsInput.value.trim(); // Comma-separated string\n    const id = todoIdInput.value;\n    const currentProjectId = todoForm.dataset.currentProjectId;\n\n    if (todoTitleInput.validity.valueMissing) {\n      showFieldError(todoTitleInput, 'Task name is required.');\n      isValid = false;\n    }\n\n    return isValid\n      ? {\n        id,\n        title,\n        description,\n        dueDate,\n        priority,\n        tagsString,\n        currentProjectId\n      }\n      : null;\n  }\n\n  // Form validation\n  function clearFormErrors(formElement) {\n    formElement.querySelectorAll('.form-input, .form-select').forEach(input => {\n      input.setCustomValidity('');\n    });\n    formElement.querySelectorAll('.error-message').forEach(span => {\n      span.textContent = '';\n    });\n  }\n\n  function showFieldError(inputElement, message) {\n    const helpSpan = inputElement.parentElement.querySelector('.help-message');\n    const errorSpan = inputElement.parentElement.querySelector('.error-message');\n\n    inputElement.setCustomValidity(message);\n    errorSpan.textContent = message;\n    if (helpSpan) {\n      helpSpan.remove();\n    }\n  }\n\n  function showNotification(message, type = 'info') { // types: info, success, error, warning\n    const notification = document.createElement('div');\n    notification.classList.add('notification', type);\n    notification.textContent = message;\n\n    notificationArea.appendChild(notification);\n\n    // Remove notification from DOM after animation completes\n    notification.addEventListener('animationend', (e) => {\n      if (e.animationName === 'fadeOutNotification') {\n        notification.remove();\n      }\n    });\n  }\n\n  function renderTagCloud(tags, activeTag) {\n    if (!tagFilterArea) return;\n    clearElement(tagFilterArea);\n\n    if (tags && tags.length > 0) {\n      tags.forEach(tag => {\n        const tagElement = document.createElement('span');\n        tagElement.classList.add('tag-filter-item');\n        tagElement.textContent = tag;\n        tagElement.dataset.tag = tag;\n        if (tag === activeTag) {\n          tagElement.classList.add('active');\n        }\n        tagFilterArea.appendChild(tagElement);\n      });\n    } else {\n      const noTagsMsg = document.createElement('span');\n      noTagsMsg.textContent = 'No tags available for filtering.';\n      noTagsMsg.style.fontSize = '0.9em';\n      noTagsMsg.style.color = '#666';\n      tagFilterArea.appendChild(noTagsMsg);\n    }\n\n    if (tagFilterClearBtn) {\n      tagFilterClearBtn.style.display = activeTag ? 'inline' : 'none';\n    }\n    if (tagFilterClearBtn && !tagFilterArea.contains(tagFilterClearBtn) && tags.length > 0) {\n      tagFilterArea.appendChild(tagFilterClearBtn);\n    }\n  }\n\n  // Initial state\n  function initializeUI() {\n    updateProjectTitle('Loading projects...');\n    clearElement(todosListUL);\n    const li = document.createElement('li');\n    li.textContent = 'Select or add a project to see your tasks.';\n    todosListUL.appendChild(li);\n    addTodoBtn.style.display = 'none';\n  }\n\n  return {\n    renderProjects,\n    renderTodos,\n    updateProjectTitle,\n    openProjectModal,\n    closeProjectModal,\n    openTodoModal,\n    closeTodoModal,\n    getProjectFormData,\n    getTodoFormData,\n    clearElement,\n    showNotification,\n    renderTagCloud,\n    initializeUI,\n    elements: {\n      projectModal,\n      todoModal,\n      projectsListUL,\n      todosListUL,\n      addProjectBtn,\n      addTodoBtn,\n      projectForm,\n      todoForm,\n      closeProjectModalBtn,\n      closeTodoModalBtn,\n      tagFilterClearBtn,\n    },\n  };\n})();\n\nexport default domController;","import appLogic from './appLogic.js';\nimport domController from './domController.js';\nimport './style.css';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let currentSearchTerm = '';\n  let currentPriorityFilter = 'all';\n  let currentTagFilter = null;\n  let currentSortCriteria = { field: 'dueDate', direction: 'asc' };\n\n  const searchInput = document.getElementById('search-todos-input');\n  const priorityFilterSelect = document.getElementById('priority-filter');\n  const tagFilterArea = document.getElementById('tag-filter-area');\n  const tagFilterClearBtn = document.getElementById('tag-filter-clear-btn');\n  const sortTodosSelect = document.getElementById('sort-todos');\n\n  function refreshTagCloud() {\n    let tagsForCloud = [];\n    const currentProject = appLogic.getCurrentProject();\n    const isGlobalMode = currentSearchTerm && currentSearchTerm.trim() !== '';\n\n    if (isGlobalMode) {\n      tagsForCloud = appLogic.getAllTagsAcrossProjects();\n    } else if (currentProject) {\n      const projectData = appLogic.getProjectById(currentProject.id);\n      tagsForCloud = projectData ? projectData.getUniqueTags() : [];\n    } else {\n      tagsForCloud = appLogic.getAllTagsAcrossProjects();\n    }\n    domController.renderTagCloud(tagsForCloud, currentTagFilter);\n  }\n\n  function updateAndRenderTodos() {\n    let todosToDisplay = [];\n    let viewTitle = '';\n    const isGlobalMode = currentSearchTerm && currentSearchTerm.trim() !== '';\n    const currentProjectFromSidebar = appLogic.getCurrentProject();\n\n    if (isGlobalMode) {\n      // Active global search\n      viewTitle = `Search results for '${currentSearchTerm}'`;\n      const allTodosWithProjectInfo = appLogic.getAllTodosWithProjectInfo();\n      todosToDisplay = appLogic.searchTodosInList(allTodosWithProjectInfo, currentSearchTerm);\n    } else if (currentProjectFromSidebar) {\n      const projectData = appLogic.getProjectById(currentProjectFromSidebar.id);\n      if (projectData) {\n        viewTitle = projectData.name;\n        todosToDisplay = projectData.getAllTodos();\n      } else {\n        viewTitle = 'Project not found';\n        todosToDisplay = [];\n      }\n    } else {\n      viewTitle = 'Select a project or search';\n      todosToDisplay = [];\n    }\n\n    refreshTagCloud();\n\n    let filteredTodos = [...todosToDisplay];\n    if (currentPriorityFilter !== 'all') {\n      filteredTodos = filteredTodos.filter(todo => todo.priority === currentPriorityFilter);\n    }\n\n    if (currentTagFilter) {\n      const lowerTagFilter = currentTagFilter.toLowerCase();\n      filteredTodos = filteredTodos.filter(todo =>\n        todo.tags.some(t => t.toLowerCase() === lowerTagFilter)\n      );\n    }\n\n    let sortedTodos = appLogic.sortTodos(filteredTodos, currentSortCriteria.field, currentSortCriteria.direction);\n\n    const renderData = {\n      name: viewTitle,\n      todos: sortedTodos,\n      isGlobalSearch: isGlobalMode\n    };\n    domController.renderTodos(renderData);\n    domController.updateProjectTitle(viewTitle);\n    domController.elements.addTodoBtn.style.display = currentProjectFromSidebar ? 'block' : 'none';\n  }\n\n  if (searchInput) {\n    searchInput.addEventListener('input', (e) => {\n      currentSearchTerm = e.target.value;\n      updateAndRenderTodos();\n    });\n  }\n\n  if (priorityFilterSelect) {\n    priorityFilterSelect.addEventListener('change', (e) => {\n      currentPriorityFilter = e.target.value;\n      updateAndRenderTodos();\n    });\n  }\n  if (tagFilterArea) {\n    tagFilterArea.addEventListener('click', (e) => {\n      if (e.target.classList.contains('tag-filter-item')) {\n        const clickedTag = e.target.dataset.tag;\n        if (currentTagFilter === clickedTag) {\n          currentTagFilter = null; // Toggle off\n        } else {\n          currentTagFilter = clickedTag;\n        }\n        updateAndRenderTodos();\n      }\n    });\n  }\n\n  if (tagFilterClearBtn) {\n    tagFilterClearBtn.addEventListener('click', () => {\n      if (currentTagFilter !== null) {\n        currentTagFilter = null;\n        updateAndRenderTodos();\n      }\n    });\n  }\n\n  // Project event listeners\n  domController.elements.addProjectBtn.addEventListener('click', () => {\n    domController.openProjectModal();\n  });\n\n  domController.elements.closeProjectModalBtn.addEventListener('click', () => {\n    domController.closeProjectModal();\n  });\n\n  // Project form submission\n  domController.elements.projectForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const projectData = domController.getProjectFormData();\n    if (projectData) {\n      let result;\n      let action = 'added';\n      if (projectData.id) { // Editing existing project\n        result = appLogic.updateProject(projectData.id, projectData.name);\n        action = 'updated';\n        if (result && result.error === 'duplicate') {\n          domController.showNotification(`Project name \"${projectData.name}\" already exists.`, 'error');\n          return;\n        }\n      } else { // Adding new project\n        result = appLogic.addProject(projectData.name);\n      }\n\n      if (result && !result.error) {\n        if (action === 'added') appLogic.setCurrentProject(result.id);\n        refreshProjectsList();\n        updateAndRenderTodos();\n        domController.closeProjectModal();\n        domController.showNotification(`Project \"${result.name}\" ${action}.`, 'success');\n      } else if (action === 'added') {\n        domController.showNotification('Unable to add project. Name might be invalid.', 'error');\n      }\n    }\n  });\n\n  if (sortTodosSelect) {\n    sortTodosSelect.addEventListener('change', (e) => {\n      const [field, direction] = e.target.value.split('_');\n      currentSortCriteria = { field, direction };\n      updateAndRenderTodos();\n    });\n  }\n\n  // Actions on a project\n  domController.elements.projectsListUL.addEventListener('click', (e) => {\n    const projectLi = e.target.closest('li[data-project-id]');\n    if (!projectLi) return;\n\n    const projectId = projectLi.dataset.projectId;\n    if (e.target.classList.contains('edit-project-btn')) {\n      const projectToEdit = appLogic.getProjectById(projectId);\n      if (projectToEdit) {\n        domController.openProjectModal(projectToEdit);\n      }\n    } else if (e.target.classList.contains('delete-project-btn')) {\n      const projectToDelete = appLogic.getProjectById(projectId);\n      if (projectToDelete && confirm(`You will permanently delete project \"${projectToDelete.name}\" and all its tasks.`)) {\n        const result = appLogic.removeProject(projectId);\n        if (result.success) {\n          domController.showNotification(`Project \"${result.removedProjectName}\" deleted.`, 'success');\n          refreshProjectsList();\n          // If the current project was deleted, updateAndRenderTodos will handle it based on new currentProject from appLogic\n          updateAndRenderTodos();\n        } else if (result.error === 'last_project') {\n          domController.showNotification('Unable to delete the last project.', 'error');\n        } else {\n          domController.showNotification('Unable to delete project.', 'error');\n        }\n      }\n    } else if (e.target.closest('.project-name') || e.target === projectLi) { // Click on name or li itself\n      if (appLogic.getCurrentProject()?.id !== projectId) {\n        appLogic.setCurrentProject(projectId);\n        refreshProjectsList();\n        currentSearchTerm = '';\n\n        if (searchInput) searchInput.value = '';\n        currentPriorityFilter = 'all'; // Reset priority filter\n        if (priorityFilterSelect) priorityFilterSelect.value = 'all'; // Reset select element\n        currentTagFilter = null;\n        currentSortCriteria = { field: 'dueDate', direction: 'asc' }; // Reset sort\n        if (sortTodosSelect) sortTodosSelect.value = 'dueDate_asc';\n        currentTagFilter = null;\n        updateAndRenderTodos();\n      }\n    }\n  });\n\n  // To-do event listeners\n  domController.elements.addTodoBtn.addEventListener('click', () => {\n    const currentProject = appLogic.getCurrentProject();\n    if (currentProject) {\n      domController.openTodoModal(null, currentProject.id);\n    } else {\n      domController.showNotification('Please select project to add task.', 'warning');\n    }\n  });\n\n  domController.elements.closeTodoModalBtn.addEventListener('click', () => {\n    domController.closeTodoModal();\n  });\n\n  // To-do form submission\n  domController.elements.todoForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const todoData = domController.getTodoFormData();\n    if (todoData) {\n      let success = false;\n      if (todoData.id) { // Editing existing todo\n        if (appLogic.updateTodoInProject(todoData.currentProjectId, todoData.id, todoData)) {\n          success = true;\n        }\n      } else { // Adding new todo\n        if (appLogic.addTodoToProject(todoData.currentProjectId, todoData)) {\n          success = true;\n        }\n      }\n\n      if (success) {\n        updateAndRenderTodos();\n        domController.closeTodoModal();\n        domController.showNotification(todoData.id ? 'Task updated.' : 'Task added.', 'success');\n      } else {\n        domController.showNotification('Unable to update task.', 'error');\n      }\n    }\n  });\n\n  // Actions on todo items\n  domController.elements.todosListUL.addEventListener('click', (e) => {\n    const target = e.target;\n    const todoLi = target.closest('li[data-todo-id]');\n    if (!todoLi) return;\n\n    const todoId = todoLi.dataset.todoId;\n    // Determine the project ID\n    let projectIdForAction = todoLi.dataset.originalProjectId; // From global search\n    if (!projectIdForAction) {\n      const currentProject = appLogic.getCurrentProject();\n      if (currentProject) {\n        projectIdForAction = currentProject.id;\n      }\n    }\n\n    if (!todoId || !projectIdForAction) return;\n\n    if (target.classList.contains('delete-todo-btn')) {\n      const project = appLogic.getProjectById(projectIdForAction);\n      const todoToDelete = project.getTodoById(todoId);\n      if (confirm(`You will permanently delete task \"${todoToDelete.title}\".`)) {\n        appLogic.removeTodoFromProject(projectIdForAction, todoId);\n        domController.showNotification('Task deleted.', 'success');\n        updateAndRenderTodos();\n      }\n    } else if (target.classList.contains('edit-todo-btn')) {\n      const todoToEdit = appLogic\n        .getProjectById(projectIdForAction)\n        ?.getTodoById(todoId);\n      if (todoToEdit) {\n        domController.openTodoModal(todoToEdit, projectIdForAction);\n      }\n    } else if (target.classList.contains('todo-checkbox')) {\n      appLogic.toggleTodoComplete(projectIdForAction, todoId);\n      updateAndRenderTodos();\n    }\n  });\n\n  // Close modals if clicked outside\n  window.addEventListener('click', (e) => {\n    if (e.target === domController.elements.projectModal) {\n      domController.closeProjectModal();\n    }\n    if (e.target === domController.elements.todoModal) {\n      domController.closeTodoModal();\n    }\n  });\n\n  // Initial render based on loaded data\n  if (appLogic.getCurrentProject()) {\n    updateAndRenderTodos();\n  } else if (appLogic.getAllProjects().length > 0) {\n    // If no current project but projects exist, select the first one\n    const firstProject = appLogic.getAllProjects()[0];\n    appLogic.setCurrentProject(firstProject.id);\n    refreshProjectsList();\n    updateAndRenderTodos();\n  } else {\n    domController.updateProjectTitle('Add a project');\n    domController.renderTodos(null);\n  }\n\n  // Helper functions to refresh project list\n  function refreshProjectsList() {\n    const projects = appLogic.getAllProjects();\n    const currentProject = appLogic.getCurrentProject();\n    domController.renderProjects(\n      projects,\n      currentProject ? currentProject.id : null,\n    );\n  }\n\n  // Initial setup\n  domController.initializeUI();\n  refreshProjectsList();\n  updateAndRenderTodos();\n});"],"names":["constructor","title","description","dueDate","priority","tags","arguments","length","undefined","completed","this","id","concat","Date","now","Math","random","toString","slice","isNaN","valueOf","trim","parsedDate","Array","isArray","toggleComplete","updateDetails","details","includes","map","tag","filter","tagsString","setTagsFromString","addTag","trimmedTag","push","removeTag","tagToRemove","trimmedTagToRemove","getTagsString","join","split","name","todos","addTodo","todoItem","Todo","some","todo","removeTodo","todoId","getTodoById","find","getAllTodos","getTodosByPriority","priorityLevel","getTodosByCompletion","completionStatus","getTodosByTag","toLowerCase","t","getUniqueTags","allTags","Set","forEach","add","from","sort","STORAGE_KEY","data","serializedData","JSON","stringify","localStorage","setItem","error","console","getItem","parse","appLogic","projects","currentProject","saveProjects","storage","getProjectById","projectId","p","getAllTodosAcrossProjects","reduce","acc","project","priorityOrder","loadedData","plainProject","Project","plainTodo","workProject","personalProject","learningProject","createSampleData","loadProjects","addProject","newProject","updateProject","newName","projectToUpdate","removeProject","projectIndex","findIndex","removedProject","splice","success","removedProjectName","newCurrentProject","getAllProjects","setCurrentProject","getCurrentProject","addTodoToProject","todoDetails","newTodo","removeTodoFromProject","updateTodoInProject","updatedDetails","otherDetails","_objectWithoutProperties","_excluded","toggleTodoComplete","getAllTodosWithProjectInfo","allTodosWithProjectInfo","_objectSpread","originalProjectId","projectName","searchTodosInList","searchTerm","lowerSearchTerm","getAllTagsAcrossProjects","filterTodosByTagAcrossProjects","allTodos","filterTodosByPriorityAcrossProjects","sortTodos","sortField","sortDirection","sorted","a","b","valA","valB","comparison","domController","projectsListUL","document","getElementById","addProjectBtn","currentProjectTitle","addTodoBtn","todosListUL","tagFilterArea","tagFilterClearBtn","notificationArea","projectModal","projectForm","projectIdInput","projectNameInput","saveProjectBtn","closeProjectModalBtn","todoModal","todoForm","todoIdInput","todoTitleInput","todoDescriptionInput","todoDueDateInput","todoPriorityInput","todoTagsInput","closeTodoModalBtn","clearElement","element","firstChild","removeChild","updateProjectTitle","textContent","clearFormErrors","formElement","querySelectorAll","input","setCustomValidity","span","showFieldError","inputElement","message","helpSpan","parentElement","querySelector","errorSpan","remove","renderProjects","currentProjectId","li","createElement","classList","appendChild","dataset","nameSpan","actionsDiv","editBtn","innerHTML","deleteBtn","renderTodos","projectOrSearchResults","isGlobalSearch","checkbox","type","checked","todoInfoDiv","titleSpan","dueDateSpan","date","isValidDate","format","projectLabelSpan","tagsDiv","tagSpan","openProjectModal","projectToEdit","reset","value","style","display","focus","closeProjectModal","openTodoModal","todoToEdit","closeTodoModal","getProjectFormData","isValid","validity","valueMissing","getTodoFormData","showNotification","notification","addEventListener","e","animationName","renderTagCloud","activeTag","tagElement","noTagsMsg","fontSize","color","contains","initializeUI","elements","currentSearchTerm","currentPriorityFilter","currentTagFilter","currentSortCriteria","field","direction","searchInput","priorityFilterSelect","sortTodosSelect","updateAndRenderTodos","todosToDisplay","viewTitle","isGlobalMode","currentProjectFromSidebar","projectData","tagsForCloud","refreshTagCloud","filteredTodos","lowerTagFilter","renderData","target","clickedTag","preventDefault","result","action","refreshProjectsList","projectLi","closest","projectToDelete","confirm","_appLogic$getCurrentP","todoData","todoLi","projectIdForAction","todoToDelete","_appLogic$getProjectB","window","firstProject"],"sourceRoot":""}